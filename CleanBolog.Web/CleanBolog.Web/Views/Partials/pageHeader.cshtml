@inherits UmbracoViewPage

@{

    var title = Model.HasValue("title") ? Model.Value("title") : Model.Name;

    string subtitle = Model.HasValue("subtitle") ? Model.Value<string>("subtitle") : "";

    var image = Model.Value<IPublishedContent>("mainImage", fallback: Fallback.ToAncestors); //fallback eğer eklenmemişse diğerlerinede akliyor recusive şeklinde

    string imageUrl = "";
    if (image != null)
    {
        imageUrl = image.GetCropUrl(width: 1903, height: 532);
    }
    string authorName = Model.HasValue("authorName") & string.IsNullOrWhiteSpace(Model.Value<string>("authorName")) ? Model.Value<string>("authorName") : "";
    DateTime articleDate = Model.HasProperty("articleDate") && Model.HasValue("articleDate") ? Model.Value<DateTime>("articleDate") : DateTime.MinValue;

    bool hasAuthorDetails = !string.IsNullOrWhiteSpace(authorName) | articleDate != DateTime.MinValue;
}
<!-- Page Header -->
<header class="masthead lazyload" style="@(!string.IsNullOrWhiteSpace(imageUrl) ? "background-image: url("+imageUrl+")" : null)">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="site-heading">
                    <h1>@title</h1>
                    @if (!string.IsNullOrWhiteSpace(subtitle))
                    {
                        <span class="subheading">@subtitle</span>
                    }
                    @if (hasAuthorDetails)
                    {
                        <span class="meta">
                            Posted
                            @if (string.IsNullOrWhiteSpace(authorName))
                            {
                                Html.Raw("by " + authorName);
                            }
                            on @articleDate.ToString("MMMM dd, yyyy")

                        </span>
                    }

                </div>
            </div>
        </div>
    </div>
</header>